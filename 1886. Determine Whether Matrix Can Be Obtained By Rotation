// link : https://leetcode.com/problems/determine-whether-matrix-can-be-obtained-by-rotation/description/

class Solution {
    public boolean findRotation(int[][] mat, int[][] target) {
        int rot = 0;
        while(rot < 4) { // 0 1 2 3 
            rotateBy90(mat); // 1 
            //check both the matrix are equal or not.
            if(check(mat , target)) {
                return true;
            }
            else {
                rot++; // 1 
                continue;
            }
        }
        return false;
    }

    public static void rotateBy90(int[][] mat) {
        // rotate matrix by 90 degree.
        for(int i=0; i<mat.length; i++) {
            for(int j=i; j<mat[0].length; j++) {
                // swapping.
                int t = mat[i][j];
                mat[i][j] = mat[j][i];
                mat[j][i] = t;
            }
        }
        //swapping the rows.
        for(int i=0; i<mat.length; i++) {
            int left = 0;
            int right = mat[i].length-1;
            while(left < right) {
                int t = mat[i][left];
                mat[i][left] = mat[i][right];
                mat[i][right] = t;

                left++;
                right--;
            }
        }
    }

    public static boolean check(int[][] mat , int[][] target) {
        for(int i=0; i<mat.length; i++) {
            for(int j=0; j<mat[0].length; j++) {
                if(mat[i][j] != target[i][j]) return false;
            }
        }
        return true;
    }
}
